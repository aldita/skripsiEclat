{
    "collab_server" : "",
    "contents" : "# require(RMySQL)\n# mydb = dbConnect(MySQL(), user='root', password='', dbname='fast54', host='localhost')\n\noptions(shiny.deprecation.messages=FALSE)\noptions(shiny.port = 6962)\n\nlibrary(shiny)\nlibrary(knitr)\nlibrary(R.utils)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(wordcloud)\nlibrary(AlgDesign)\nlibrary(datasets)\nlibrary(GGally)\nlibrary(xtable)\nlibrary(shinyBS)\nlibrary(googleVis)\nlibrary(gdata)\nlibrary(foreign)\nlibrary(Hmisc)\nlibrary(rmarkdown)\nlibrary(markdown)\nlibrary(shinyAce)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(maptools)\nlibrary(xlsx)\nlibrary(xlsxjars)\nlibrary(dygraphs)\n\nmax_plots <- 10\n#source(\"tools/script/FRBS.pmml.R\")\n#source(\"tools/script/pmml.frbs.R\")\n#source(\"tools/script/pmml.R\")\nshinyServer(function(input, output, session){\n  \n  # fungsi source untuk meload fungsi yang dipakai bersama\n  getClientData <- function(){\n    return(session$clientData)\n  }\n  source('fast.R', local = TRUE)\n  \n  setInitValues <- function() {\n    # initialize state list and reactive values\n    if(testingFast) {\n      # load previous state for testing\n      \n    } else {\n      \n      state_list <<- list()\n      values <<- reactiveValues()\n      #initial data for soft computing fts-aco\n      #elan\n      valuesFTSACO <<- reactiveValues()\n      valuesFTSACO$FTSACOlearnBtn <- 0\n      \n      # initial plot height and width\n      values$plotHeight <- 650\n      values$plotWidth <- 650\n      \n      values$modellist <- list()\n      \n      nilaiTabel <<- reactiveValues()\n      nilaiTabel[[\"tmp\"]] <- data.frame()\n      nilaiTabel[[\"flag\"]] <- 0\n      \n      values$report <- list()\n      \n      nilaiTabel[[\"frequency\"]] <- 12\n      nilaiTabel[[\"start\"]] <- 2004\n      \n#       #initial data for soft computing neuro-fuzzy\n#       #prima\n#       #values$modelFuzzy <- list()\n#       #tabelHasilFuzzy <<- reactiveValues()\n#       #tabelHasilFuzzy[[\"tmp\"]] <- data.frame()\n#       errorKFoldFuzzy <- list()\n#       valuesANFIS <<- reactiveValues()\n#       valuesANFIS$counter <- 0\n#       valuesANFIS$butt1 <- 0\n#       valuesANFIS$butt2 <- 0\n#       valuesANFIS$butt3 <- 0\n#       valuesANFIS$butt4 <- 0\n#       valuesANFIS$butt5 <- 0\n#       valuesANFIS$nullbutt <- 0\n#       valuesANFIS$learnButton <- 0\n#       #end initial data for soft computing neuro-fuzzy\n      \n      # Datasets can change over time (i.e. the changedata function). Therefore,\n      # the data need to be a reactive value so the other reactive functions\n      # and outputs that depend on these datasets will know when they are changed.\n      # robj <- load(\"../base/data/data_init/diamonds.rda\") \n      \n            robj <- load(\"data/data_init/diamonds.rda\") \n            df <- get(robj)\n            values[[\"diamonds\"]] <- df\n            values[[\"diamonds_descr\"]] <- attr(df,'description')\n            values$datasetlist <- c(\"diamonds\")\n#       robj <- load(\"data/data_init/IHK_TahunDasar2012.rda\") \n#       df <- get(robj)\n#       values[[\"IHK_TahunDasar2012\"]] <- df \n#       values[[\"IHK_TahunDasar2012_descr\"]] <- attr(df,'description')\n#       values$datasetlist <- c(\"IHK_TahunDasar2012\")\n    }\n  }\n  \n  setInitValues()   # using a function here so it can also be called from state.R to reset the app\n  \n  \n  # source dari data & alat analisis\n  R.utils::sourceDirectory('tools/analysis', recursive = TRUE, modifiedOnly = FALSE)\n  R.utils::sourceDirectory('tools/data', recursive = TRUE, modifiedOnly = FALSE)\n  R.utils::sourceDirectory('tools/app', recursive = TRUE, modifiedOnly = FALSE)\n\nobserve ({\n  \n  if(is.null(input$startClusteringFgwcGsa)) return()\n  if(input$startClusteringFgwcGsa){\n      updateTabsetPanel(session,'tabPanelFgwcGsa',selected = 'tabSummary')\n      updateCollapse(session,'summaryPanel',open = 'Summary Clustering')\n  }\n  \n  if(is.null(input$shareok)) return()\n  if(input$shareok<1) return ()\n  isolate ({\n    toggleModal(session, \"mo3\")\n    \n    \n  })\t})\n\n})\n\n",
    "created" : 1468588967598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4271338572",
    "id" : "BB7DBA65",
    "lastKnownWriteTime" : 1469245473,
    "last_content_update" : 1469245473302,
    "path" : "E:/Coding/R/Skripsi/Fast-Modul-FgwcGsa/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}