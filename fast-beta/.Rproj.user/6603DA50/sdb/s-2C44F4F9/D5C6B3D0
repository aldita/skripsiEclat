{
    "collab_server" : "",
    "contents" : "\nsource(\"FunctionHelperFPA.R\")\n\nrequire(RMySQL)\n# mydb = dbConnect(MySQL(), user='root', password='', dbname='fastforum', host='10.100.244.108')\n## FPA-SVR\n#library(FPASVR)\nlibrary(xts)\nlibrary(plotly)\n\n\nlibrary(shiny)\nlibrary(knitr)\nlibrary(R.utils)\nlibrary(markdown)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(datasets)\nlibrary(GGally)\nlibrary(nortest)\nlibrary(xtable)\nlibrary(shinyBS)\nlibrary(googleVis)\nlibrary(clValid)\nlibrary(cluster)\nlibrary(gdata)\nlibrary(foreign)\nlibrary(Hmisc)\nlibrary(zoo)\nlibrary(rmarkdown)\nlibrary(corrplot)\nlibrary(ridge)\nlibrary(frbs) #prima\nlibrary(survival) #bayu\nlibrary(KMsurv) #bayu\nlibrary(randomForest) #ezi\nlibrary(gtable) #ezi\nlibrary(GPArotation)\nlibrary(magrittr)\nlibrary(dygraphs)\nlibrary(Rcpp)\nlibrary(shinyjs)\nlibrary(lmtest)\nlibrary(DAAG)\nlibrary(maptools)\nlibrary(ggplot2)\nlibrary(scatterD3)\nlibrary(MASS)\nlibrary(gtools)\nlibrary(jsonlite)\nlibrary(pastecs)\nlibrary(rmarkdown)\nlibrary(biclust)\nlibrary(arules)\nlibrary(arulesViz)\n\n\n# library(arulesViz)\n# library(arules)\n\n# library(rgdal)\n# library(ggplot2)\n\n# library(rgdal)\n# library(ggplot2)\n# library(rmarkdown)\n#================= \n\n#library(forecast)\n#library(censReg)\n# #library(tseries)\n# #library(writeXLS)\n# # library(shinyIncubator)\n# # library(fpc) #prima\n# # library(rgdal) #fikri\n# # library(rgeos) #fikri\n#library(ape)\n# library(spdep)\n# library(RcppArmadillo)\n#======================\n\nmax_plots <- 10\n#source(\"tools/script/FRBS.pmml.R\")\n#source(\"tools/script/pmml.frbs.R\")\n#source(\"tools/script/pmml.R\")\nshinyServer(function(input, output, session){\n  \n  # fungsi source untuk meload fungsi yang dipakai bersama\n  source('fast.R', local = TRUE)\n  setInitValues <- function() {\n    # initialize state list and reactive values\n    if(testingFast) {\n      # load previous state for testing\n      \n    } else {\n      \n      state_list <<- list()\n      values <<- reactiveValues()\n\n      #initial data for soft computing fts-aco\n      #elan\n      valuesFTSACO <<- reactiveValues()\n      valuesFTSACO$FTSACOlearnBtn <- 0\n      \n      # initial plot height and width\n      values$plotHeight <- 650\n      values$plotWidth <- 650\n      \n      values$modellist <- list()\n      \n      nilaiTabel <<- reactiveValues()\n      nilaiTabel[[\"tmp\"]] <- data.frame()\n      nilaiTabel[[\"flag\"]] <- 0\n      \n      values$report <- list()\n      \n      nilaiTabel[[\"frequency\"]] <- 12\n      nilaiTabel[[\"start\"]] <- 2004\n      \n      #initial data for soft computing neuro-fuzzy\n      #prima\n      #values$modelFuzzy <- list()\n      #tabelHasilFuzzy <<- reactiveValues()\n      #tabelHasilFuzzy[[\"tmp\"]] <- data.frame()\n      errorKFoldFuzzy <- list()\n      valuesANFIS <<- reactiveValues()\n      valuesANFIS$counter <- 0\n      valuesANFIS$butt1 <- 0\n      valuesANFIS$butt2 <- 0\n      valuesANFIS$butt3 <- 0\n      valuesANFIS$butt4 <- 0\n      valuesANFIS$butt5 <- 0\n      valuesANFIS$nullbutt <- 0\n      valuesANFIS$learnButton <- 0\n      #end initial data for soft computing neuro-fuzzy\n      \n      # Datasets can change over time (i.e. the changedata function). Therefore,\n      # the data need to be a reactive value so the other reactive functions\n      # and outputs that depend on these datasets will know when they are changed.\n      # robj <- load(\"../base/data/data_init/diamonds.rda\") \n      \n            robj <- load(\"data/data_init/diamonds.rda\") \n            df <- get(robj)\n            values[[\"diamonds\"]] <- df\n            values[[\"diamonds_descr\"]] <- attr(df,'description')\n            values$datasetlist <- c(\"diamonds\")\n#       robj <- load(\"data/data_init/IHK_TahunDasar2012.rda\") \n#       df <- get(robj)\n#       values[[\"IHK_TahunDasar2012\"]] <- df \n#       values[[\"IHK_TahunDasar2012_descr\"]] <- attr(df,'description')\n#       values$datasetlist <- c(\"IHK_TahunDasar2012\")\n    }\n  }\n  \n  setInitValues()   # using a function here so it can also be called from state.R to reset the app\n  \n  \n  # source dari data & alat analisis\n  #...\n  R.utils::sourceDirectory('tools/analysis', recursive = TRUE, modifiedOnly = FALSE) \n  R.utils::sourceDirectory('tools/data', recursive = TRUE, modifiedOnly = FALSE)\n  R.utils::sourceDirectory('tools/app', recursive = TRUE, modifiedOnly = FALSE)\n\nobserve ({\n\n    if(is.null(input$startClusteringFgwcGsa)) return()\n  if(input$startClusteringFgwcGsa){\n      updateTabsetPanel(session,'tabPanelFgwcGsa',selected = 'tabSummary')\n      updateCollapse(session,'summaryPanel',open = 'Summary Clustering')\n  }\n\n  if(is.null(input$shareok)) return()\n  if(input$shareok<1) return ()\n  isolate ({\n    toggleModal(session, \"mo3\")\n    \n    \n  })\t})\n\nobserveEvent(input$startClusteringFgwcGsa,{\n  result <<- calculateFgwcGsa()\n})\n\n})",
    "created" : 1497164988140.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3466223305",
    "id" : "D5C6B3D0",
    "lastKnownWriteTime" : 1503284347,
    "last_content_update" : 1503284347809,
    "path" : "~/Skripsi/2/fast-beta/fast-beta/server.R",
    "project_path" : "server.R",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}